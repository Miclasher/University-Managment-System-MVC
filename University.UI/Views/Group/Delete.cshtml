@model GroupDeleteViewModel;

@{
	ViewData["Title"] = "Delete group";
	var studentsPresent = Model.Group.Students.Any();
}

<h2>Delete Group</h2>

<form class="container" asp-action="Delete">
	<input type="hidden" asp-for="Group.Id" />
	<div class="form-group m-3">
		<label asp-for="Group.Name"></label>
		<input asp-for="Group.Name" class="form-control" disabled />
		<span asp-validation-for="Group.Name" class="text-danger"></span>
	</div>
	<div class="form-group m-3">
		<label asp-for="Group.Teacher"></label>
		<select asp-for="Group.TeacherId" class="form-control" asp-items="@(new SelectList(Model.Teachers, "Id", "FullName"))" disabled></select>
		<span asp-validation-for="Group.TeacherId" class="text-danger"></span>
	</div>
	<div class="form-group m-3">
		<label asp-for="Group.Course"></label>
		<select asp-for="Group.CourseId" class="form-control" asp-items="@(new SelectList(Model.Courses, "Id", "Name"))" disabled></select>
		<span asp-validation-for="Group.CourseId" class="text-danger"></span>
	</div>
	@if (!studentsPresent)
	{
		<button type="submit" class="m-3 btn btn-dark">Delete</button>
	}
	else
	{
		<p class="m-3 text-danger">There are students in this group. You must clear it before deleting.</p>

	}
</form>


@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
}
