@model Group;

@{
	ViewData["Title"] = "Delete group";
	var studentsPresent = (bool?)ViewBag.StudentsPresent ?? false;
}

<h2>Delete Group</h2>

<div class="container">
	<form asp-action="Delete">
		<div class="form-group">
			<label asp-for="Name"></label>
			<input asp-for="Name" class="form-control" disabled />
			<span asp-validation-for="Name" class="text-danger"></span>
		</div>
		<br />
		<div class="form-group">
			<label asp-for="Teacher"></label>
			<select asp-for="TeacherId" class="form-control" asp-items="@(new SelectList(ViewBag.Teachers, "Id", "FullName"))" disabled></select>
			<span asp-validation-for="TeacherId" class="text-danger"></span>
		</div>
		<br />
		<div class="form-group">
			<label asp-for="Course"></label>
			<select asp-for="CourseId" class="form-control" asp-items="@(new SelectList(ViewBag.Courses, "Id", "Name"))" disabled></select>
			<span asp-validation-for="CourseId" class="text-danger"></span>
		</div>
		<br /><br />
		@if (!studentsPresent)
		{
			<button type="submit" class="btn btn-dark">Delete</button>
		}
		else
		{
			<p class="text-danger">There are students in this group. You must clear it before deleting.</p>

		}
	</form>
</div>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
}
